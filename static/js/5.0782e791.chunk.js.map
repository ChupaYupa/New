{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/HOC/withAuthComponent.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItem","active","messages","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","react_router_dom","to","name","Message","message","maxLength","maxLengthreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Dialogs","state","messagesPage","dialogsElements","dialogsData","map","DialogsItem","key","messagesElements","dialogsMessages","messag","Dialogs_Message_Message","textarea","e","sendMessage","newMessagesText","mapStateForRedirectToProps","isAuth","authPage","compose","connect","dispatch","addSendMessageCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","react_router","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,YAAA,6BAAAC,OAAA,wBAAAC,SAAA,2HCWHC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEV,QAC1CM,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,GAAIT,GAAOD,EAAMW,QCIfC,EAPC,SAACZ,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,SAAUK,EAAMa,2CC0CzCC,EAAYC,YAAgB,IAW1BC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,CAVL,SAACjB,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMc,SAAUnB,EAAMoB,cAClBjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAeX,GAAYH,KAAK,kBAAmBe,YAAY,uBACtGvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iCAODsB,EAnDC,SAAC3B,GACb,IAAI4B,EAAQ5B,EAAM6B,aAGdC,EAAkBF,EAAMG,YAAYC,IAAI,SAAAxB,GAAM,OAAIL,EAAAC,EAAAC,cAAC4B,EAAD,CAAYtB,KAAMH,EAAOG,KAAMuB,IAAK1B,EAAON,GAAIA,GAAIM,EAAON,OAE5GiC,EAAmBP,EAAMQ,gBAAgBJ,IAAI,SAAAK,GAAM,OAAIlC,EAAAC,EAAAC,cAACiC,EAAD,CAASzB,QAASwB,EAAOxB,QAASqB,IAAKG,EAAOnC,GAAIA,GAAImC,EAAOnC,OAgBxH,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,SACdQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,aACbkC,GAGL3B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAET,UACbqC,GAELhC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEgC,UAClBpC,EAAAC,EAAAC,cAACW,EAAD,CAAqBG,SAdT,SAACqB,GACjBxC,EAAMyC,YAAYD,EAAEE,+ECxBxBC,EAA6B,SAACf,GAC9B,MAAO,CACHgB,OAAQhB,EAAMiB,SAASD,gBCchBE,sBACXC,YAdkB,SAACnB,GACnB,MAAO,CACHC,aAAcD,EAAMC,eAGJ,SAACmB,GACrB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAsBP,QDNX,SAACQ,GAAc,IACrCC,EADqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAjB,IAAA,SAAA4B,MAAA,WAGnC,OAAIP,KAAKvD,MAAM4C,OACRzC,EAAAC,EAAAC,cAAC6C,EAAcK,KAAKvD,OADGG,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAUrD,GAAG,eAHRyC,EAAA,CACXa,IAAMd,WAQtC,OADoCH,YAAQJ,EAARI,CAAoCI,ICG7DL,CAEQnB","file":"static/js/5.0782e791.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__12ekh\",\"dialogsItem\":\"Dialogs_dialogsItem__1D4wm\",\"active\":\"Dialogs_active__3aQwY\",\"messages\":\"Dialogs_messages__3QavT\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n    <NavLink to={path}>{props.name}</NavLink>\r\n</div>\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialogs}>{props.message}\r\n    \r\n    </div>\r\n};\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthreator, requiredField} from \"../../Utils/Validation/indexValid\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n\r\n    let messagesElements = state.dialogsMessages.map(messag => <Message message={messag.message} key={messag.id} id={messag.id} />);\r\n\r\n    //\r\n    // let newMessageText = state.newMessagesText;\r\n    // // let newMessageElement = React.createRef();\r\n\r\n\r\n    // let onNewMessageChange = (e) => {\r\n    //     let newBody = e.target.value;\r\n    //     props.store.dispatch(updateNewMessageBodyreator(newBody))\r\n    // }\r\n\r\n    let addNewMessage = (e) =>{\r\n        props.sendMessage(e.newMessagesText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div className={s.textarea}>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength = maxLengthreator(10);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} validate={[requiredField, maxLength]} name=\"newMessagesText\"  placeholder=\"Enter your message\"/>\r\n            <div>\r\n                <button >Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateForRedirectToProps = (state) => {\r\n    return {\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n};\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnetedAuthRedirectComponent = connect(mapStateForRedirectToProps)(RedirectComponent)\r\n    return ConnetedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { addSendMessageCreator } from '../../Redux/dialogs-reduce';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport {withAuthRedirect} from \"../HOC/withAuthComponent\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\nlet mapDispathToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessagesText) => {\r\n            dispatch(addSendMessageCreator(newMessagesText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispathToProps),\r\n    withAuthRedirect )(Dialogs);\r\n"],"sourceRoot":""}